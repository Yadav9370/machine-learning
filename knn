library(class)
data(iris)
set.seed(123)
train_indices <- sample(1:nrow(iris), 0.7 * nrow(iris))
train_data <- iris[train_indices, ]
test_data <- iris[-train_indices, ]

k <- 3
knn_model <- knn(train = train_data[, -5], test = test_data[, -5], cl = train_data$Species, k = k)
accuracy <- sum(knn_model == test_data$Species) / nrow(test_data)
print(paste("Accuracy of knn model with k =", k, ":", accuracy))

# Perform PCA for dimensionality reduction
pca <- prcomp(train_data[, -5], scale. = TRUE)
train_data_pca <- predict(pca, train_data[, -5])
test_data_pca <- predict(pca, test_data[, -5])

# Plot the data points
plot(train_data_pca[, 1], train_data_pca[, 2], col = as.numeric(train_data$Species), pch = 16,
     xlab = "Principal Component 1", ylab = "Principal Component 2",
     main = "Iris Dataset (PCA)")
legend("topright", legend = levels(iris$Species), col = 1:3, pch = 16, title = "Species")

# Add test data points
points(test_data_pca[, 1], test_data_pca[, 2], col = as.numeric(test_data$Species), pch = 16)
